name: Check Nightly Build Status
on:
  workflow_call:
    inputs:
      nightly-build:
        required: true
        type: string
      platform: 
        required: false
        type: string
      runs-on:
        required: true
        type: string
    outputs:
      run_url:
        description: "Stores run URL."
        value: ${{ jobs.check-build.outputs.run_url }}
      run_conclusion: 
        description: "If nightly-build's conclusion."
        value: ${{ jobs.check-build.outputs.run_conclusion }}
      run_id:
        description: "Stores run id."
        value: ${{ jobs.check-build.outputs.run_id }}
      
env:
  GH_TOKEN: ${{ github.token }}
  GH_REPO: duckdb/duckdb
jobs:
  check-build:
    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: Checkout the repo with the script
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install DuckDB for Python
        shell: bash
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          python -m pip install --upgrade pip
          pip install duckdb --pre --upgrade
          pip install duckdb pandas tabulate
      
      - name: Create ${{ inputs.nightly-build }} run status report
        id: check-build
        shell: bash
        run: |
          output_data=$(python scripts/create_build_report.py ${{ inputs.nightly-build }})
          
          echo $output_data
          failures_count = $(echo $output_data | -jq -r '.failures_count')

          if [ $failures_count == 0 ]; then
            echo "run_conclusion='success'" >> $GITHUB_OUTPUT
          else
            echo "run_conclusion='failure'" >> $GITHUB_OUTPUT
          fi
          echo "run_id=$(echo $output_data | jq -r '.run_id')" >> $GITHUB_OUTPUT
          echo "run_url=$(echo $output_data | jq -r '.url')" >> $GITHUB_OUTPUT

      - name: Upload Run Status file
        uses: actions/upload-artifact@v4
        with:
          name: build_report_${{ inputs.nightly-build }}
          path: build_report_${{ inputs.nightly-build }}.md