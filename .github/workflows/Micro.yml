name: Regression
on:
  workflow_call:
    inputs:
      base_hash:
        type: string
  workflow_dispatch:
    inputs:
      base_hash:
        type: string
        default: 120567b3d5
  repository_dispatch:
  push:
    branches-ignore:
      - 'main'
      - 'feature'
      - 'v*.*-*'
    paths-ignore:
      - '**.md'
      - 'tools/**'
      - '!tools/pythonpkg/**'
      - '.github/patches/duckdb-wasm/**'
      - '.github/workflows/**'
      - '!.github/workflows/Regression.yml'
  merge_group:
  pull_request:
    types: [opened, reopened, ready_for_review]
    paths-ignore:
      - '**.md'
      - 'tools/**'
      - '!tools/pythonpkg/**'
      - '.github/patches/duckdb-wasm/**'
      - '.github/workflows/**'
      - '!.github/workflows/Regression.yml'


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || '' }}-${{ github.base_ref || '' }}-${{ github.ref != 'refs/heads/main' || github.sha }}
  cancel-in-progress: true

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  BASE_BRANCH: ${{ github.base_ref || (endsWith(github.ref, '_feature') && 'feature' || 'main') }}
  BASE_HASH: ${{ inputs.base_hash }}

jobs:
  regression-test-benchmark-runner:
    name: Regression Tests
    runs-on: ubuntu-22.04
    env:
      CC: gcc-10
      CXX: g++-10
      GEN: ninja
      BUILD_BENCHMARK: 1
      BUILD_JEMALLOC: 1
      CORE_EXTENSIONS: "json;tpch;tpcds;httpfs;inet;icu"

    steps:
      - uses: actions/checkout@v4
        with:
          repository: duckdb/duckdb
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install
        shell: bash
        run: sudo apt-get update -y -qq && sudo apt-get install -y -qq ninja-build && pip install requests

      # For PRs we compare against the base branch
      - name: Build Current and Base Branch
        # if: ${{ !(github.repository == 'duckdb/duckdb' && github.ref == 'refs/heads/main') }}
        shell: bash
        run: |
          make
          git clone --branch ${{ env.BASE_BRANCH }} https://github.com/duckdb/duckdb.git --depth=1
          cd duckdb
          make
          cd ..

      - name: Set up benchmarks
        shell: bash
        run: |
          cp -r benchmark duckdb/

      - name: Clean up space
        shell: bash
        run: |
          sudo apt-get clean
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          sudo rm -rf /opt/pipx
          sudo rm -rf /opt/microsoft
          sudo rm -rf /opt/google
          docker system prune -af

      - name: Regression Test Micro
        if: always()
        shell: bash
        run: |
          # ls benchmark/micro/**/*.benchmark > .github/regression/micro.csv
          # grep -v "arrow" .github/regression/micro.csv > tmp && mv tmp .github/regression/micro.csv
          # python scripts/regression/test_runner.py --old duckdb/build/release/benchmark/benchmark_runner --new build/release/benchmark/benchmark_runner --benchmarks .github/regression/micro.csv --verbose --threads 2
          # benchmark/micro/result_collection/batched_arrow_result.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/result_collection/batched_stream_query.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/simd/auto-vectorization.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/string/bitstring.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/string/concat_long.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/string/concat_short.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/string/contains_integers.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/string/contains_long.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/string/contains_r.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/string/contains_re.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/string/contains_reg.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/string/contains_regular.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/string/equality_long.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/string/equality_short.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/string/greater_than_long.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/string/greater_than_short.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/string/inet_escape_function.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/string/inet_unescape_charrefs.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/string/inet_unescape_codepoints.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/string/length_long.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/string/length_short.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/string/like_regular.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/string/regexp_matches.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/string/string_agg_long.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/string/string_agg_order_by.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/string/string_agg_short.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/string/url_encode.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/timestamp/extract_month.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/timestamp/extract_year.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/update/update_with_join.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/view/many_values.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/window/mode_fixed_orderby.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/window/mode_variable_400.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/window/mode_variable_orderby.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/window/streaming_lag.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/window/streaming_lead.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/window/window_constant_aggregates.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/window/window_constant_count.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/window/window_count_star_fixed_100.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/window/window_count_star_variable_100.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/window/window_iqr_fixed_100.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/window/window_iqr_variable_100.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/window/window_list_aggr.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/window/window_mad_fixed_100.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/window/window_mad_variable_100.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/window/window_median_fixed_100.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/window/window_median_variable_100.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/window/window_mode_constant.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/window/window_mode_fixed_100.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/window/window_partition.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/window/window_rownumber_orderbys.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/window/window_streamed_sum.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/window/window_sum.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/zonemaps/data_skipping.benchmark
          ./build/release/benchmark/benchmark_runner benchmark/micro/zonemaps/zonemaps.benchmark
          # ./build/release/benchmark/benchmark_runner "benchmark/micro/.*" 

      - name: Setup upterm session
        uses: lhotari/action-upterm@v1