name: ReproduceTPCHPerfIssue
on:
  # schedule:
  #   - cron:  '0 1 * * MON' # runs at 2am CET MONDAY
  workflow_dispatch:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || '' }}-${{ github.base_ref || '' }}-${{ github.ref != 'refs/heads/main' || github.sha }}
  cancel-in-progress: true

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  gh_issue_repo: duckdblabs/duckdb-internal
  mounted_directory_name: mount-point

jobs:
  # start-runner:
  #   name: Start self-hosted ec2 runner
  #   runs-on: ubuntu-latest
  #   env:
  #     instance_id: i-0a6cd2153bfd28349

  #   steps:
  #     - name: Start EC2 runner
  #       shell: bash
  #       env:
  #         AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
  #         AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
  #         AWS_DEFAULT_REGION: us-east-1
  #       run: aws ec2 start-instances --instance-id ${{ env.instance_id }}

  #     - name: Create issue if failure
  #       shell: bash
  #       if: ${{ failure() && contains(github.ref_name, 'main') }}
  #       run: |
  #         gh issue create --repo ${{ env.gh_issue_repo }} --title "Weekly Regression Test Failure" --body "AWS box with instance-id ${{ env.instance_id }} could not be started"

  configure-mount-and-download-benchmark-data:
    name: Test TPCH
    # needs: start-runner
    # runs-on: self-hosted
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        runner: [ macos-latest, macos-13 ]
    env:
      GEN: ninja
      BUILD_BENCHMARK: 1
      BUILD_TPCH: 1
      BUILD_TPCDS: 1
      BUILD_JSON: 1
      BUILD_HTTPFS: 1
      BUILD_ICU: 1
      BUILD_JEMALLOC: 1
      CORE_EXTENSIONS: "inet"
      regression_output: regression_output.txt
    steps:
      - name: Clean up space
        run: |
          # sudo apt-get clean
          # sudo rm -rf /usr/local/lib/android
          # sudo rm -rf /usr/share/dotnet
          # sudo rm -rf /opt/pipx
          # sudo rm -rf /opt/microsoft
          # sudo rm -rf /opt/google
          # df -h
          du -sh /Applications/Xcode* 2>/dev/null
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          du -sh /Applications/Xcode* 2>/dev/null

      - name: Install
        shell: bash
        run: sudo apt-get update -y -qq && sudo apt-get install -y -qq g++ ninja-build cmake make libssl-dev
      
      # - name: Load data for sf100 benchmarks.
      #   shell: bash
      #   working-directory: ${{ env.mounted_directory_name}}
      #   run: |
      #     wget https://duckdb-blobs.s3.us-east-1.amazonaws.com/data/tpch-sf100.db -O tpch_sf100.duckdb
      #     sudo du -sh /home/* /usr/* /opt/* 2>/dev/null | sort -hr | head -20

      - name: checkout duckdb-curr
        uses: actions/checkout@v4
        with:
          repository: 'duckdb/duckdb'
          fetch-depth: 0
          path: duckdb
          # path: ${{ env.mounted_directory_name}}/duckdb


      - name: Build
        shell: bash
        # working-directory: ${{ env.mounted_directory_name}}
        run: |
          cd duckdb 
          git checkout f027a66be019569c316599090158577ab342bf4f
          make clean && make
          
      # - name: Set up benchmarks 
      #   shell: bash
      #   working-directory: ${{ env.mounted_directory_name}}
      #   run: |
      #     mkdir duckdb_benchmark_data
      #     cd duckdb_benchmark_data
      #     ln -s ../../tpch_sf100.duckdb .
      #     cd ..
    
      - name: Run Regression Test
        continue-on-error: true
        shell: bash
        # working-directory: ${{ env.mounted_directory_name}}
        run: |
          cd duckdb
          echo "NO LIMIT" 
          ./build/release/benchmark/benchmark_runner "benchmark/large/tpch-sf100/.*" 

          # set mem limit and threads to extension/tpch/dbgen/queries/ here:
          for q in "extension/tpch/dbgen/queries/"*; do
            sed -i '1i SET memory_limit = '\''16GB'\'';' "$q"
            sed -i '2i SET threads TO 8;' "$q"
          done
          
          echo "LIMIT" 

          ./build/release/benchmark/benchmark_runner "benchmark/large/tpch-sf100/.*" 
