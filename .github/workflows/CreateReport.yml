name: Create Report
on:
  workflow_call:
    inputs:
      platform:
        required: true
        type: string
      nightly-build:
        required: true
        type: string
      architecture:
        required: false
        type: string
      run_url:
        required: true
        type: string
env:
  GH_TOKEN: ${{ github.token }}
jobs:
  prepare-result:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          pip install duckdb pandas tabulate

      - name: Download build reports
        uses: actions/download-artifact@v4
        with:
          pattern: build_report_${{ inputs.nightly-build }}*
          path: build_report_${{ inputs.nightly-build }}
      - name: Download extensions test results
        if: always()
        uses: actions/download-artifact@v4
        with:
          pattern: list_failed_ext_${{ inputs.nightly-build }}*
          path: list_failed_ext_${{ inputs.nightly-build }}

      - name: Prepare a result table with extensions
        shell: bash
        run: |
          # list_failed_ext_*/ are artifacts of the previous job and, for Python, produced by scripts/test_install_load_extensions.py
          
          if [ $(ls list_failed_ext_${{ inputs.nightly-build }}*/list_failed_ext_${{ inputs.nightly-build }}*/ | wc -l) -gt 0 ]; then
            cat list_failed_ext_${{ inputs.nightly-build }}/list_failed_ext_${{ inputs.nightly-build }}*/*.md >> result.csv

            # scripts/prepare_report.py creates failed_extensions_${{ inputs.platform }}.md file
            python scripts/prepare_report.py result.csv --platform ${{ inputs.platform }}
          fi

      - name: Create result file
        shell: bash
        if: always()
        run: |
          # build_report_*/ is an artifact of the Check Nightly Build Status workflow
          if [[ $(ls build_report_*/build_report*/ | wc -l) -gt 0 || -f failed_extensions_${{ inputs.platform }}.md ]]; then
            echo "## ${{ inputs.nightly-build }}" > report_${{ inputs.platform }}.md
            cat build_report_*/build_report*/* >> report_${{ inputs.platform }}.md
          fi
          # this adds the extensions part to the report
          if [ -f failed_extensions_${{ inputs.platform }}.md ]; then
            cat failed_extensions_${{ inputs.platform }}.md >> report_${{ inputs.platform }}.md
          fi
          
      - name: Upload result file
        uses: actions/upload-artifact@v4
        with:
          name: report_${{ inputs.platform }}
          path: report_${{ inputs.platform }}.md
