name: Check Nightly Builds Python
on:
  workflow_call:
    inputs:
      nightly-build:
        required: true
        type: string
        
env:
  GH_TOKEN: ${{ github.token }}
  GH_REPO: duckdb/duckdb
jobs:
  test:
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        runs-on: [ ubuntu-latest, macos-latest, windows-2019 ]
        python-version: [ '3.8', '3.9', '3.10', '3.11', '3.12', '3.13' ]
        exclude:
          - runs-on: macos-latest
            python-version: '3.8'
      fail-fast: false
    steps:
      - name: Checkout the repo with the script
        uses: actions/checkout@v4
      - name: Set up Python${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Checkout repo with extensions config file
        uses: actions/checkout@v4
        with:
          repository: duckdb/duckdb
          sparse-checkout: |
            .github/config
          path: ext
      - name: Install pip
        shell: bash
        run: |
          python -m pip install --upgrade pip
          python -v
      - name: Install Duckdb for Python${{ matrix.python-version }}
        shell: bash
        run: pip install duckdb --pre --upgrade

      - name: Verify version
        if: success()
        shell: bash
        run: |  
          echo "Installing latest Duckdb..."
          gh run list --repo ${{ env.GH_REPO }} --event repository_dispatch --workflow Python --created $(date +%Y-%m-%d) --json databaseId > run_id.csv
          run_id=$(tail -n 1 run_id.csv | awk -F "[:}]" '{ print $2 }' | tr -d ' "')
        
          echo "Verifying version..."
          full_sha=$(gh run view $run_id --repo ${{ env.GH_REPO }} --json headSha -q .headSha)
          python scripts/verify_version.py $full_sha --workflow ${{ inputs.nightly-build }} \
            --platform ${{ matrix.runs-on }} --version ${{ matrix.python-version }}
  
      - name: Install extensions
        if: ${{ hashFiles(format('issue_body_Python_extensions_{0}.txt', matrix.runs-on)) == '' }}
        shell: bash
        run: |  
          echo "Trying to INSTALL and LOAD extensions..."
          python scripts/test_install_load_extensions.py ${{ matrix.runs-on }} --version ${{ matrix.python-version }}

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: issue_ext_${{ matrix.runs-on }}_${{ matrix.python-version }}
          path: issue_ext_*.txt
